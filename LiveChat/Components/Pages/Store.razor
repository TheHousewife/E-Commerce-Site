@page "/Store"
@using LiveChat.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext Context
@inject CartService CartService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="container-fluid bg-light py-5 shadow-sm">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1 class="display-4 fw-bold">Check out our latest products</h1>
                <p class="lead">We have new sales every week!</p>
            </div>
            <div class="col-md-6">
                <img src="images/summer-sale.jpg" class="img-fluid rounded" alt="Summer sale banner">
            </div>
        </div>
    </div>
</div>



<div class="container my-5">
    <h2 class="text-center mb-4">Browse our selection</h2>
    <div class="text-center mb-3">
        <select @onchange="SelectedCategoryChanged" class="form-select w-auto mx-auto px-5 py-2 fw-bold">
            <option value="All">Show All</option>
            <option value="Electronics">Electronics</option>
            <option value="Clothing">Clothing</option>
            <option value="Accessories">Accessories</option>
        </select>
    </div>
    <div class="row g-4">
        @foreach (var product in _products)
        {
            <div class="col-md-3">
                <div class="card h-100 shadow-sm">
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Price.ToString("C")</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <a href="/product/@product.Id" class="btn btn-outline-primary">View Details</a>
                            @if (isUserLoggedIn)
                            {
                                <button class="btn btn-primary" @onclick="() => AddToCart(product)">Add to Cart</button>
                            }
                            else
                            {
                                <a href="Account/Login" class="btn btn-secondary">Login to Add</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<Product> _products = new();
    private bool isUserLoggedIn;
    private string userId;
    private string selectedCategory = "All";

    protected override async Task OnInitializedAsync()
    {
        var allProducts = await Context.Products.ToListAsync();
        UpdateProductList(allProducts);

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isUserLoggedIn = user.Identity.IsAuthenticated;
        if (isUserLoggedIn)
        {
            userId = user.Identity.Name;
        }
    }

    private void UpdateProductList(List<Product> allProducts)
    {
        _products = selectedCategory == "All" 
            ? allProducts 
            : allProducts.Where(p => p.ProductType == selectedCategory).ToList();
    }

    private async Task SelectedCategoryChanged(ChangeEventArgs e)
    {
        selectedCategory = e.Value?.ToString() ?? "All";
        var allProducts = await Context.Products.ToListAsync();
        UpdateProductList(allProducts);
        StateHasChanged();
    }

    private async Task AddToCart(Product product)
    {
        if (!isUserLoggedIn) return;
        await CartService.AddToCartAsync(userId, product);
    }
}
@page "/Cart"
@using LiveChat.Data
@using LiveChat.Components.Pages
@using CartModel = LiveChat.Data.Cart
@inject CartService CartService
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (isLoading)
{
    <div class="d-flex align-items-center justify-content-center mt-5">
        <strong>Loading...</strong>
        <div class="spinner-border ms-3 text-primary" role="status" aria-hidden="true"></div>
    </div>
}
else
{
    <div class="container">
        <h2 class="mt-4">Your Shopping Cart</h2>

        @if (_shoppingCart == null || _shoppingCart.Items.Count == 0)
        {
            <div class="alert alert-info" role="alert">
                Your cart is empty.
            </div>
        }
        else
        {
            <table class="table table-bordered table-striped mt-3">
                <thead class="thead-dark">
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in _shoppingCart.Items)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Price.ToString("C")</td>
                        <td>@item.Quantity</td>
                        <td>@((item.Price * item.Quantity).ToString("C"))</td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => RemoveFromCart(item.ProductId)">Remove</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            <p class="font-weight-bold h5 mt-3">Total Price: @_shoppingCart.TotalPrice.ToString("C")</p>
        }
    </div>
}


@if (_shoppingCart == null || _shoppingCart.Items.Count == 0)
{
    <div class="d-flex justify-content-center align-items-center">
        <a href="Store" class="btn btn-secondary mt-3 p-2 w-25" style="font-size: 1.3rem;">Return to Store</a>
    </div>
                         
}
else
{
    <div class="container">
        <button class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#paymentModal">
            Proceed to Payment
        </button>
    
        <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="paymentModalLabel">Choose Payment Method</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="mb-3">
                                <label for="paymentMethod" class="form-label">Select Payment Method</label>
                                <select class="form-select mt-3" id="paymentMethod">
                                    <option value="credit">Credit Card</option>
                                    <option value="paypal">PayPal</option>
                                    <option value="bank">Bank Transfer</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="paymentMethod" class="form-label">Select Coupon</label>
                                <select class="form-select mt-3" id="couponSelection" @onchange="ApplyCoupon">
                                    <option value="none">None</option>
                                    <option value="firstPurchase">First Purchase (20% off)</option>
                                </select>
                            </div>
                            <div class="text-center">
                                <p class="font-weight-bold h5 mt-3">Total Price: @GetTotalPrice().ToString("C")</p>
                                <button type="button" class="btn btn-success mt-3" data-bs-dismiss="modal">
                                    Confirm Purchase
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>              
}



@code {
    private CartModel _shoppingCart;
    private string userId;
    private bool couponApplied = false;
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        
        await Task.Delay(1000);
        
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userId = user.Identity.Name;
            _shoppingCart = await CartService.GetCartAsync(userId);
        }
        
        isLoading = false;
    }

    private async Task RemoveFromCart(int productId)
    {
        await CartService.RemoveFromCartAsync(userId, productId);
        _shoppingCart = await CartService.GetCartAsync(userId);
    }
    
    private void ApplyCoupon(ChangeEventArgs e)
    {
        var selectedCoupon = e.Value?.ToString();

        if (selectedCoupon == "firstPurchase")
        {
            couponApplied = true;
        }
        else
        {
            couponApplied = false;
        }
    }

    private decimal GetTotalPrice()
    {
        var total = _shoppingCart?.TotalPrice ?? 0;

        if (couponApplied)
        {
            total *= 0.8M;
        }

        return total;
    }
}
